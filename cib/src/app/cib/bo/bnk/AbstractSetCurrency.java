/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Mar 01 15:49:52 CST 2007 by MyEclipse Hibernate Tool.
 */
package app.cib.bo.bnk;

import java.io.Serializable;

/**
 * A class that represents a row in the TXN_LIMIT table. 
 * You can customize the behavior of this class by editing the class, {@link TxnLimit()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractSetCurrency 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String ccyCode;

    /** The value of the simple afterModifyId property. */
    private java.lang.String availableFlag;

    public AbstractSetCurrency(java.lang.String ccyCode)
    {
        this.setCcyCode(ccyCode);
    }

    public java.lang.String getCcyCode() {
		return ccyCode;
	}

	public void setCcyCode(java.lang.String ccyCode) {
		this.ccyCode = ccyCode;
	}

	public java.lang.String getAvailableFlag() {
		return availableFlag;
	}

	public void setAvailableFlag(java.lang.String availableFlag) {
		this.availableFlag = availableFlag;
	}

	/**
     * Simple constructor of AbstractTxnLimit instances.
     */
    public AbstractSetCurrency()
    {
    }
    
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int relationIdValue = this.getCcyCode() == null ? 0 : this.getCcyCode().hashCode();
            result = result * 37 + relationIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
    

    
}
