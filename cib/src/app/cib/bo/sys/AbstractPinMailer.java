/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Nov 17 12:47:30 CST 2008 by MyEclipse Hibernate Tool.
 */
package app.cib.bo.sys;

import java.io.Serializable;

/**
 * A class that represents a row in the PIN_MAILER table. 
 * You can customize the behavior of this class by editing the class, {@link PinMailer()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractPinMailer 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String seqNo;

    /** The value of the simple userId property. */
    private java.lang.String userId;

    /** The value of the simple referenceNo property. */
    private java.lang.String referenceNo;

    /** The value of the simple password property. */
    private java.lang.String password;

    /** The value of the simple created property. */
    private java.util.Date created;

    /** The value of the simple confirmed property. */
    private java.util.Date confirmed;

    /**
     * Simple constructor of AbstractPinMailer instances.
     */
    public AbstractPinMailer()
    {
    }

    /**
     * Constructor of AbstractPinMailer instances given a simple primary key.
     * @param seqNo
     */
    public AbstractPinMailer(java.lang.String seqNo)
    {
        this.setSeqNo(seqNo);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getSeqNo()
    {
        return seqNo;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param seqNo
     */
    public void setSeqNo(java.lang.String seqNo)
    {
        this.hashValue = 0;
        this.seqNo = seqNo;
    }

    /**
     * Return the value of the USER_ID column.
     * @return java.lang.String
     */
    public java.lang.String getUserId()
    {
        return this.userId;
    }

    /**
     * Set the value of the USER_ID column.
     * @param userId
     */
    public void setUserId(java.lang.String userId)
    {
        this.userId = userId;
    }

    /**
     * Return the value of the REFERENCE_NO column.
     * @return java.lang.String
     */
    public java.lang.String getReferenceNo()
    {
        return this.referenceNo;
    }

    /**
     * Set the value of the REFERENCE_NO column.
     * @param referenceNo
     */
    public void setReferenceNo(java.lang.String referenceNo)
    {
        this.referenceNo = referenceNo;
    }

    /**
     * Return the value of the PASSWORD column.
     * @return java.lang.String
     */
    public java.lang.String getPassword()
    {
        return this.password;
    }

    /**
     * Set the value of the PASSWORD column.
     * @param password
     */
    public void setPassword(java.lang.String password)
    {
        this.password = password;
    }

    /**
     * Return the value of the CREATED column.
     * @return java.util.Date
     */
    public java.util.Date getCreated()
    {
        return this.created;
    }

    /**
     * Set the value of the CREATED column.
     * @param created
     */
    public void setCreated(java.util.Date created)
    {
        this.created = created;
    }

    /**
     * Return the value of the CONFIRMED column.
     * @return java.util.Date
     */
    public java.util.Date getConfirmed()
    {
        return this.confirmed;
    }

    /**
     * Set the value of the CONFIRMED column.
     * @param confirmed
     */
    public void setConfirmed(java.util.Date confirmed)
    {
        this.confirmed = confirmed;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof PinMailer))
            return false;
        PinMailer that = (PinMailer) rhs;
        if (this.getSeqNo() == null || that.getSeqNo() == null)
            return false;
        return (this.getSeqNo().equals(that.getSeqNo()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int seqNoValue = this.getSeqNo() == null ? 0 : this.getSeqNo().hashCode();
            result = result * 37 + seqNoValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
