/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Aug 21 10:35:46 CST 2006 by MyEclipse Hibernate Tool.
 */
package app.cib.bo.sys;

import java.io.Serializable;

/**
 * A class that represents a row in the TXN_SUBTYPE table. 
 * You can customize the behavior of this class by editing the class, {@link TxnSubtype()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractTxnSubtype 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String txnSubtype;

    /** The value of the simple txnType property. */
    private java.lang.String txnType;

    /** The value of the simple txnType property. */
    private java.lang.String txnTypeDesc;

    /** The value of the simple txnType property. */
    private java.lang.Integer txnTypeIndex;

    /**
     * Simple constructor of AbstractTxnSubtype instances.
     */
    public AbstractTxnSubtype()
    {
    }

    /**
     * Constructor of AbstractTxnSubtype instances given a simple primary key.
     * @param txnSubtype
     */
    public AbstractTxnSubtype(java.lang.String txnSubtype)
    {
        this.setTxnSubtype(txnSubtype);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getTxnSubtype()
    {
        return txnSubtype;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param txnSubtype
     */
    public void setTxnSubtype(java.lang.String txnSubtype)
    {
        this.hashValue = 0;
        this.txnSubtype = txnSubtype;
    }

    /**
     * Return the value of the TXN_TYPE column.
     * @return java.lang.String
     */
    public java.lang.String getTxnType()
    {
        return this.txnType;
    }

    /**
     * Set the value of the TXN_TYPE column.
     * @param txnType
     */
    public void setTxnType(java.lang.String txnType)
    {
        this.txnType = txnType;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof TxnSubtype))
            return false;
        TxnSubtype that = (TxnSubtype) rhs;
        if (this.getTxnSubtype() == null || that.getTxnSubtype() == null)
            return false;
        return (this.getTxnSubtype().equals(that.getTxnSubtype()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int txnSubtypeValue = this.getTxnSubtype() == null ? 0 : this.getTxnSubtype().hashCode();
            result = result * 37 + txnSubtypeValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }

	public java.lang.String getTxnTypeDesc() {
		return txnTypeDesc;
	}

	public void setTxnTypeDesc(java.lang.String txnTypeDesc) {
		this.txnTypeDesc = txnTypeDesc;
	}

	public java.lang.Integer getTxnTypeIndex() {
		return txnTypeIndex;
	}

	public void setTxnTypeIndex(java.lang.Integer txnTypeIndex) {
		this.txnTypeIndex = txnTypeIndex;
	}
}
