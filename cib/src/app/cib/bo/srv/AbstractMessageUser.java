/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Aug 21 10:37:24 CST 2006 by MyEclipse Hibernate Tool.
 */
package app.cib.bo.srv;

import java.io.Serializable;

/**
 * A class that represents a row in the MESSAGE_USER table. 
 * You can customize the behavior of this class by editing the class, {@link MessageUser()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractMessageUser 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String muId;

    /** The value of the message association. */
    private Message message;

    /** The value of the simple userId property. */
    private java.lang.String userId;

    /** The value of the simple readTime property. */
    private java.util.Date readTime;

    /** The value of the simple deleteTime property. */
    private java.util.Date deleteTime;

    /** The value of the simple muStatus property. */
    private java.lang.String muStatus;

    /**
     * Simple constructor of AbstractMessageUser instances.
     */
    public AbstractMessageUser()
    {
    }

    /**
     * Constructor of AbstractMessageUser instances given a simple primary key.
     * @param muId
     */
    public AbstractMessageUser(java.lang.String muId)
    {
        this.setMuId(muId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getMuId()
    {
        return muId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param muId
     */
    public void setMuId(java.lang.String muId)
    {
        this.hashValue = 0;
        this.muId = muId;
    }

    /**
     * Return the value of the MESSAGE_ID column.
     * @return Message
     */
    public Message getMessage()
    {
        return this.message;
    }

    /**
     * Set the value of the MESSAGE_ID column.
     * @param message
     */
    public void setMessage(Message message)
    {
        this.message = message;
    }

    /**
     * Return the value of the USER_ID column.
     * @return java.lang.String
     */
    public java.lang.String getUserId()
    {
        return this.userId;
    }

    /**
     * Set the value of the USER_ID column.
     * @param userId
     */
    public void setUserId(java.lang.String userId)
    {
        this.userId = userId;
    }

    /**
     * Return the value of the READ_TIME column.
     * @return java.util.Date
     */
    public java.util.Date getReadTime()
    {
        return this.readTime;
    }

    /**
     * Set the value of the READ_TIME column.
     * @param readTime
     */
    public void setReadTime(java.util.Date readTime)
    {
        this.readTime = readTime;
    }

    /**
     * Return the value of the DELETE_TIME column.
     * @return java.util.Date
     */
    public java.util.Date getDeleteTime()
    {
        return this.deleteTime;
    }

    /**
     * Set the value of the DELETE_TIME column.
     * @param deleteTime
     */
    public void setDeleteTime(java.util.Date deleteTime)
    {
        this.deleteTime = deleteTime;
    }

    /**
     * Return the value of the MU_STATUS column.
     * @return java.lang.String
     */
    public java.lang.String getMuStatus()
    {
        return this.muStatus;
    }

    /**
     * Set the value of the MU_STATUS column.
     * @param muStatus
     */
    public void setMuStatus(java.lang.String muStatus)
    {
        this.muStatus = muStatus;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof MessageUser))
            return false;
        MessageUser that = (MessageUser) rhs;
        if (this.getMuId() == null || that.getMuId() == null)
            return false;
        return (this.getMuId().equals(that.getMuId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int muIdValue = this.getMuId() == null ? 0 : this.getMuId().hashCode();
            result = result * 37 + muIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
